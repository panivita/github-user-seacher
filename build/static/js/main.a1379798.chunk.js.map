{"version":3,"sources":["Octocat.jpg","pages/about-page.js","pages/user-details-page.js","components/header.js","Search-user-context.js","components/search-section.js","components/result-search-section.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AboutPage","className","src","Logo","alt","dom","watch","library","add","faMapMarkerAlt","faPortrait","faUserClock","faSyncAlt","faBuilding","faLink","UserDetails","avatar_url","name","login","location","bio","blog","company","created_at","updated_at","public_repos","followers","following","href","target","rel","format","withTitle","fromNow","UserDetailsPage","username","useParams","useState","details","setUserDetails","useEffect","fetch","then","res","json","items","catch","err","console","log","faSearch","Header","SearchUserContext","createContext","SearchUserProvider","props","search","setSearch","display","setDisplay","users","setUsers","setErr","length","message","Provider","value","children","Search","useContext","placeholder","onChange","event","ResultSearch","wrapperRef","useRef","history","useHistory","document","addEventListener","handleClickerOutside","removeEventListener","wrap","current","contains","ref","map","id","key","tabIndex","style","outline","cursor","onClick","push","App","to","exact","path","Boolean","window","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.a1379798.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Octocat.5d292e21.jpg\";","import React from \"react\";\r\nimport Logo from \"../Octocat.jpg\";\r\n\r\nexport const AboutPage = () => {\r\n  return (\r\n    <>\r\n      <section className=\"about-container\">\r\n        <h1>About the project</h1>\r\n\r\n        <div className=\"description-about\">\r\n          <h2>What is it</h2>\r\n          <ul>\r\n            <li>\r\n              {\"    \"}Hi there and welcome to <b>Github user searcher</b>, a\r\n              page where you can find a github user and get details about the\r\n              github user. It provides a simple functionality of permorming\r\n              search results, and user's pages.\r\n            </li>\r\n\r\n            <li>\r\n              <b>Github user searcher</b> is a personal project built with React\r\n              to search users and view their profiles on Github.{\" \"}\r\n            </li>\r\n            <li>\r\n              Every time you type something (every word), the application will\r\n              make a request to GitHub API looking for the typed username and\r\n              respective user information matching the query will be displayed.\r\n              If user not found, an alert message will be displayed which will\r\n              disappear{\" \"}\r\n            </li>\r\n            <li>\r\n              The profile information will contain avatar, user's GitHub profile\r\n              information such as his status, location, and his membership\r\n              information.\r\n            </li>\r\n          </ul>\r\n          <h2 className=\"tools\">Libraries and tools</h2>\r\n          <section className=\"tools-container\">\r\n            <div>\r\n              <ul>\r\n                <li>React</li>\r\n                <li>React Router</li>\r\n                <li>Moment</li>\r\n                <li>Fortawesome icons</li>\r\n              </ul>\r\n            </div>\r\n            <img src={Logo} alt=\"octocat github\" className=\"about-img\" />\r\n          </section>\r\n        </div>\r\n      </section>\r\n      <footer>\r\n        <div className=\"copyright\">Â© 2020 Victoria Kush</div>\r\n      </footer>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { library, dom } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faMapMarkerAlt,\r\n  faPortrait,\r\n  faUserClock,\r\n  faSyncAlt,\r\n  faBuilding,\r\n  faLink,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\ndom.watch();\r\nlibrary.add(\r\n  faMapMarkerAlt,\r\n  faPortrait,\r\n  faUserClock,\r\n  faSyncAlt,\r\n  faBuilding,\r\n  faLink\r\n);\r\n\r\nconst UserDetails = ({\r\n  avatar_url,\r\n  name,\r\n  login,\r\n  location,\r\n  bio,\r\n  blog,\r\n  company,\r\n  created_at,\r\n  updated_at,\r\n  public_repos,\r\n  followers,\r\n  following,\r\n}) => (\r\n  <>\r\n    <div className=\"container\">\r\n      <section className=\"user-details\">\r\n        <img src={avatar_url} className=\"user-logo\" alt=\"user logo\"></img>\r\n        <div className=\"user-repos\">\r\n          <p>Repos: {public_repos}</p>\r\n          <p>Followers: {followers}</p>\r\n          <p>Following: {following}</p>\r\n        </div>\r\n      </section>\r\n      <section className=\"user-details-container\">\r\n        {name !== null ? <h2>{name}</h2> : <h2>{login}</h2>}\r\n        {location !== null ? (\r\n          <p>\r\n            <i className=\"fas fa-map-marker-alt\"></i> {location}\r\n          </p>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {bio !== null ? (\r\n          <p>\r\n            <i className=\"fas fa-portrait\"></i> {bio}\r\n          </p>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {company !== null ? (\r\n          <p>\r\n            <i className=\"fas fa-building\"></i> {company}\r\n          </p>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {blog !== \"\" ? (\r\n          <a href={blog} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fas fa-link\"></i> {blog}\r\n          </a>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <p>\r\n          <i className=\"fas fa-user-clock\"></i>Member since:{\" \"}\r\n          <Moment format=\"D MMM YYYY\" withTitle>\r\n            {created_at}\r\n          </Moment>\r\n        </p>\r\n        <p>\r\n          <i className=\"fas fa-sync-alt\"></i>Last update:{\" \"}\r\n          <Moment fromNow>{updated_at}</Moment>\r\n        </p>\r\n      </section>\r\n    </div>\r\n    <footer>\r\n      <div className=\"copyright\">Â© 2020 Victoria Kush</div>\r\n    </footer>\r\n  </>\r\n);\r\n\r\nexport const UserDetailsPage = () => {\r\n  const { username } = useParams();\r\n  const [details, setUserDetails] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.github.com/users/\" + username)\r\n      .then((res) => res.json())\r\n      .then((items) => {\r\n        setUserDetails(items);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [username]);\r\n  if (details) {\r\n    return <UserDetails {...details} />;\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport Logo from \"../Octocat.jpg\";\r\nimport { library, dom } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\n//import { faGithub } from \"@fortawesome/free-brands-svg-icons\";<i className=\"fab fa-github\"></i>\r\ndom.watch();\r\nlibrary.add(faSearch);\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <header className=\"app-header\">\r\n      <img src={Logo} alt=\"octocat github\" className=\"logo-img\" />\r\n      <h1>\r\n        Github user searcher\r\n        <i className=\"fas fa-search\"></i>\r\n      </h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect, createContext } from \"react\";\r\n\r\nconst SearchUserContext = createContext();\r\n\r\nconst SearchUserProvider = (props) => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [display, setDisplay] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  const [err, setErr] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!search || search.length < 2) {\r\n      setUsers([]);\r\n      setDisplay(false);\r\n      return;\r\n    }\r\n    fetch(\"https://api.github.com/search/users?q=\" + search)\r\n      .then((res) => res.json())\r\n      .then(({ items }) => {\r\n        setUsers(items);\r\n        setDisplay(true);\r\n      })\r\n      .catch(err => setErr(err.message));\r\n  }, [search]);\r\n\r\n  \r\n  return (\r\n    <SearchUserContext.Provider\r\n      value={{ search, setSearch, users, err, display, setDisplay }}\r\n    >\r\n      {props.children}\r\n    </SearchUserContext.Provider>\r\n  );\r\n};\r\n\r\nexport { SearchUserContext, SearchUserProvider };\r\n","import React, { useContext } from \"react\";\r\nimport { SearchUserContext } from \"../Search-user-context\";\r\n\r\nexport const Search = () => {\r\n  const { search, setSearch } = useContext(SearchUserContext);\r\n\r\n  return (\r\n    <div className=\"search-container\">\r\n      <input\r\n        className=\"search-input\"\r\n        placeholder=\"Search for user\"\r\n        value={search}\r\n        onChange={(event) => setSearch(event.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext, useEffect, useRef } from \"react\";\r\nimport { SearchUserContext } from \"../Search-user-context\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const ResultSearch = () => {\r\n  const { users, search, err, display, setDisplay } = useContext(\r\n    SearchUserContext\r\n  );\r\n  const wrapperRef = useRef(null);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleClickerOutside);\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleClickerOutside);\r\n    };\r\n  });\r\n\r\n  const handleClickerOutside = (event) => {\r\n    const { current: wrap } = wrapperRef;\r\n    if (wrap && !wrap.contains(event.target)) {\r\n      setDisplay(false);\r\n    }\r\n  };\r\n  if (!search) return <li className=\"no-results\">No results</li>;\r\n\r\n  const goToUserDetailsPage = (username) => {\r\n    history.push(\"/users/\" + username);\r\n  };\r\n\r\n  return (\r\n    <div ref={wrapperRef} className=\"user-container\">\r\n      {err && <p>{err}</p>}\r\n      {display && !err ? (\r\n        <ul className=\"result-container\">\r\n          {users && users.length > 0 ? (\r\n            users.map(({ id, login, avatar_url }) => (\r\n              <li\r\n                className=\"result-search\"\r\n                key={id}\r\n                tabIndex=\"0\"\r\n                style={{ outline: \"none\", cursor: \"pointer\" }}\r\n                onClick={() => goToUserDetailsPage(login)}\r\n              >\r\n                <img\r\n                  src={avatar_url}\r\n                  className=\"mini-logo\"\r\n                  alt=\"user logo\"\r\n                ></img>\r\n                <span>{login}</span>\r\n              </li>\r\n            ))\r\n          ) : (\r\n            <li className=\"users\">No results found</li>\r\n          )}\r\n        </ul>\r\n      ) : (\r\n        <li className=\"loading\">Loading...</li>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport \"./media.css\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport { AboutPage } from \"./pages/about-page\";\r\nimport { UserDetailsPage } from \"./pages/user-details-page\";\r\nimport { Header } from \"./components/header\";\r\nimport { Search } from \"./components/search-section\";\r\nimport { ResultSearch } from \"./components/result-search-section\";\r\nimport { SearchUserProvider } from \"./Search-user-context\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <nav className=\"navbar-container\">\r\n        <ul>\r\n          <Link to=\"/\">Home</Link>\r\n          <Link to=\"/About\">About</Link>\r\n        </ul>\r\n      </nav>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <SearchUserProvider>\r\n            <Header />\r\n            <Search />\r\n            <ResultSearch />\r\n          </SearchUserProvider>\r\n        </Route>\r\n        <Route path=\"/about\">\r\n          <AboutPage />\r\n        </Route>\r\n        <Route path=\"/users/:username\">\r\n          <UserDetailsPage />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}